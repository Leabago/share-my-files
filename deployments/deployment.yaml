apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: share-my-files
  name: share-my-files
  namespace: applications
spec:
  replicas: 1
  selector:
    matchLabels:
      app: share-my-files
  template:
    metadata:
      labels:
        app: share-my-files
    spec:
      containers:
      - image: share-my-files
        name: share-my-files
        volumeMounts:
          - name: my-storage
            mountPath: /tmp/share-my-files
        ports:
        - containerPort: 8080
        imagePullPolicy: Never
        env:
        - name: REDIS_ADDR
          value: "redis.auxiliary.svc.cluster.local:6379"
        - name: MAX_FILE_SIZE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MAX_FILE_SIZE
      volumes:
        - name: my-storage
          persistentVolumeClaim:
            claimName: share-my-files
---
apiVersion: v1
kind: Service
metadata:
  name: share-my-files
  namespace: applications
spec:
  type: LoadBalancer
  selector:
    app: share-my-files
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: applications
data:
  MAX_FILE_SIZE: "3145728" # size in bytes

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: share-my-files
  namespace: applications
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /mnt/share-my-files

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: share-my-files
  namespace: applications
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: manual
 